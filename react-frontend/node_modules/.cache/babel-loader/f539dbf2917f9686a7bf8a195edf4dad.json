{"ast":null,"code":"import _objectSpread from \"/home/rakesh/Rakesh/nodeJs/react-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/home/rakesh/Rakesh/nodeJs/react-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/rakesh/Rakesh/nodeJs/react-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/rakesh/Rakesh/nodeJs/react-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/rakesh/Rakesh/nodeJs/react-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/rakesh/Rakesh/nodeJs/react-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/rakesh/Rakesh/nodeJs/react-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/rakesh/Rakesh/nodeJs/react-frontend/src/pages/Feed/Feed.js\";\nimport React, { Component, Fragment } from 'react';\nimport openSocket from 'socket.io-client';\nimport Post from '../../components/Feed/Post/Post';\nimport Button from '../../components/Button/Button';\nimport FeedEdit from '../../components/Feed/FeedEdit/FeedEdit';\nimport Input from '../../components/Form/Input/Input';\nimport Paginator from '../../components/Paginator/Paginator';\nimport Loader from '../../components/Loader/Loader';\nimport ErrorHandler from '../../components/ErrorHandler/ErrorHandler';\nimport './Feed.css';\n\nvar Feed = /*#__PURE__*/function (_Component) {\n  _inherits(Feed, _Component);\n\n  function Feed() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Feed);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Feed)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isEditing: false,\n      posts: [],\n      totalPosts: 0,\n      editPost: null,\n      status: '',\n      postPage: 1,\n      postsLoading: true,\n      editLoading: false\n    };\n\n    _this.addPost = function (post) {\n      _this.setState(function (prevState) {\n        var updatedPosts = _toConsumableArray(prevState.posts);\n\n        if (prevState.postPage === 1) {\n          updatedPosts.pop();\n          updatedPosts.unshift(post);\n        }\n\n        return {\n          posts: updatedPosts,\n          totalPosts: prevState.totalPosts + 1\n        };\n      });\n    };\n\n    _this.loadPosts = function (direction) {\n      if (direction) {\n        _this.setState({\n          postsLoading: true,\n          posts: []\n        });\n      }\n\n      var page = _this.state.postPage;\n\n      if (direction === 'next') {\n        page++;\n\n        _this.setState({\n          postPage: page\n        });\n      }\n\n      if (direction === 'previous') {\n        page--;\n\n        _this.setState({\n          postPage: page\n        });\n      }\n\n      fetch('http://localhost:8000/feed/posts?page=' + page, {\n        headers: {\n          Authorization: 'Bearer ' + _this.props.token\n        }\n      }).then(function (res) {\n        if (res.status !== 200) {\n          throw new Error('Failed to fetch posts.');\n        }\n\n        return res.json();\n      }).then(function (resData) {\n        _this.setState({\n          posts: resData.posts.map(function (post) {\n            return _objectSpread({}, post, {\n              imagePath: post.imageUrl\n            });\n          }),\n          totalPosts: resData.totalItems,\n          postsLoading: false\n        });\n      }).catch(_this.catchError);\n    };\n\n    _this.statusUpdateHandler = function (event) {\n      event.preventDefault();\n      fetch('URL').then(function (res) {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Can't update status!\");\n        }\n\n        return res.json();\n      }).then(function (resData) {\n        console.log(resData);\n      }).catch(_this.catchError);\n    };\n\n    _this.newPostHandler = function () {\n      _this.setState({\n        isEditing: true\n      });\n    };\n\n    _this.startEditPostHandler = function (postId) {\n      _this.setState(function (prevState) {\n        var loadedPost = _objectSpread({}, prevState.posts.find(function (p) {\n          return p._id === postId;\n        }));\n\n        return {\n          isEditing: true,\n          editPost: loadedPost\n        };\n      });\n    };\n\n    _this.cancelEditHandler = function () {\n      _this.setState({\n        isEditing: false,\n        editPost: null\n      });\n    };\n\n    _this.finishEditHandler = function (postData) {\n      _this.setState({\n        editLoading: true\n      }); // Set up data (with image!)\n\n\n      var formData = new FormData();\n      formData.append('title', postData.title);\n      formData.append('content', postData.content);\n      formData.append('image', postData.image);\n      var url = 'http://localhost:8000/feed/post';\n      var method = 'POST';\n\n      if (_this.state.editPost) {\n        url = 'http://localhost:8000/feed/post/' + _this.state.editPost._id;\n        method = 'PUT';\n      }\n\n      fetch(url, {\n        method: method,\n        body: formData,\n        headers: {\n          Authorization: 'Bearer ' + _this.props.token\n        }\n      }).then(function (res) {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Creating or editing a post failed!');\n        }\n\n        return res.json();\n      }).then(function (resData) {\n        var post = {\n          _id: resData.post._id,\n          title: resData.post.title,\n          content: resData.post.content,\n          creator: resData.post.creator,\n          createdAt: resData.post.createdAt\n        };\n\n        _this.setState(function (prevState) {\n          var updatedPosts = _toConsumableArray(prevState.posts);\n\n          if (prevState.editPost) {\n            var postIndex = prevState.posts.findIndex(function (p) {\n              return p._id === prevState.editPost._id;\n            });\n            updatedPosts[postIndex] = post;\n          } else if (prevState.posts.length < 2) {\n            updatedPosts = prevState.posts.concat(post);\n          }\n\n          return {\n            posts: updatedPosts,\n            isEditing: false,\n            editPost: null,\n            editLoading: false\n          };\n        });\n      }).catch(function (err) {\n        console.log(err);\n\n        _this.setState({\n          isEditing: false,\n          editPost: null,\n          editLoading: false,\n          error: err\n        });\n      });\n    };\n\n    _this.statusInputChangeHandler = function (input, value) {\n      _this.setState({\n        status: value\n      });\n    };\n\n    _this.deletePostHandler = function (postId) {\n      _this.setState({\n        postsLoading: true\n      });\n\n      fetch('http://localhost:8000/feed/post/' + postId, {\n        method: 'DELETE',\n        headers: {\n          Authorization: 'Bearer ' + _this.props.token\n        }\n      }).then(function (res) {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Deleting a post failed!');\n        }\n\n        return res.json();\n      }).then(function (resData) {\n        console.log(resData);\n\n        _this.setState(function (prevState) {\n          var updatedPosts = prevState.posts.filter(function (p) {\n            return p._id !== postId;\n          });\n          return {\n            posts: updatedPosts,\n            postsLoading: false\n          };\n        });\n      }).catch(function (err) {\n        console.log(err);\n\n        _this.setState({\n          postsLoading: false\n        });\n      });\n    };\n\n    _this.errorHandler = function () {\n      _this.setState({\n        error: null\n      });\n    };\n\n    _this.catchError = function (error) {\n      _this.setState({\n        error: error\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Feed, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('URL').then(function (res) {\n        if (res.status !== 200) {\n          throw new Error('Failed to fetch user status.');\n        }\n\n        return res.json();\n      }).then(function (resData) {\n        _this2.setState({\n          status: resData.status\n        });\n      }).catch(this.catchError);\n      this.loadPosts();\n      openSocket('http://localhost:8000');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ErrorHandler, {\n        error: this.state.error,\n        onHandle: this.errorHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(FeedEdit, {\n        editing: this.state.isEditing,\n        selectedPost: this.state.editPost,\n        loading: this.state.editLoading,\n        onCancelEdit: this.cancelEditHandler,\n        onFinishEdit: this.finishEditHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"section\", {\n        className: \"feed__status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.statusUpdateHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        placeholder: \"Your status\",\n        control: \"input\",\n        onChange: this.statusInputChangeHandler,\n        value: this.state.status,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        mode: \"flat\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }\n      }, \"Update\"))), /*#__PURE__*/React.createElement(\"section\", {\n        className: \"feed__control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        mode: \"raised\",\n        design: \"accent\",\n        onClick: this.newPostHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }\n      }, \"New Post\")), /*#__PURE__*/React.createElement(\"section\", {\n        className: \"feed\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 9\n        }\n      }, this.state.postsLoading && /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          textAlign: 'center',\n          marginTop: '2rem'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Loader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 15\n        }\n      })), this.state.posts.length <= 0 && !this.state.postsLoading ? /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }\n      }, \"No posts found.\") : null, !this.state.postsLoading && /*#__PURE__*/React.createElement(Paginator, {\n        onPrevious: this.loadPosts.bind(this, 'previous'),\n        onNext: this.loadPosts.bind(this, 'next'),\n        lastPage: Math.ceil(this.state.totalPosts / 2),\n        currentPage: this.state.postPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }\n      }, this.state.posts.map(function (post) {\n        return /*#__PURE__*/React.createElement(Post, {\n          key: post._id,\n          id: post._id,\n          author: post.creator.name,\n          date: new Date(post.createdAt).toLocaleDateString('en-US'),\n          title: post.title,\n          image: post.imageUrl,\n          content: post.content,\n          onStartEdit: _this3.startEditPostHandler.bind(_this3, post._id),\n          onDelete: _this3.deletePostHandler.bind(_this3, post._id),\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 17\n          }\n        });\n      }))));\n    }\n  }]);\n\n  return Feed;\n}(Component);\n\nexport default Feed;","map":{"version":3,"sources":["/home/rakesh/Rakesh/nodeJs/react-frontend/src/pages/Feed/Feed.js"],"names":["React","Component","Fragment","openSocket","Post","Button","FeedEdit","Input","Paginator","Loader","ErrorHandler","Feed","state","isEditing","posts","totalPosts","editPost","status","postPage","postsLoading","editLoading","addPost","post","setState","prevState","updatedPosts","pop","unshift","loadPosts","direction","page","fetch","headers","Authorization","props","token","then","res","Error","json","resData","map","imagePath","imageUrl","totalItems","catch","catchError","statusUpdateHandler","event","preventDefault","console","log","newPostHandler","startEditPostHandler","postId","loadedPost","find","p","_id","cancelEditHandler","finishEditHandler","postData","formData","FormData","append","title","content","image","url","method","body","creator","createdAt","postIndex","findIndex","length","concat","err","error","statusInputChangeHandler","input","value","deletePostHandler","filter","errorHandler","textAlign","marginTop","bind","Math","ceil","name","Date","toLocaleDateString"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport openSocket from 'socket.io-client';\nimport Post from '../../components/Feed/Post/Post';\nimport Button from '../../components/Button/Button';\nimport FeedEdit from '../../components/Feed/FeedEdit/FeedEdit';\nimport Input from '../../components/Form/Input/Input';\nimport Paginator from '../../components/Paginator/Paginator';\nimport Loader from '../../components/Loader/Loader';\nimport ErrorHandler from '../../components/ErrorHandler/ErrorHandler';\nimport './Feed.css';\n\nclass Feed extends Component {\n  state = {\n    isEditing: false,\n    posts: [],\n    totalPosts: 0,\n    editPost: null,\n    status: '',\n    postPage: 1,\n    postsLoading: true,\n    editLoading: false\n  };\n\n  componentDidMount() {\n    fetch('URL')\n      .then(res => {\n        if (res.status !== 200) {\n          throw new Error('Failed to fetch user status.');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        this.setState({ status: resData.status });\n      })\n      .catch(this.catchError);\n\n    this.loadPosts();\n    openSocket('http://localhost:8000');\n  }\n\n  addPost = post => {\n    this.setState(prevState => {\n      const updatedPosts = [...prevState.posts];\n      if (prevState.postPage === 1){\n        updatedPosts.pop();\n        updatedPosts.unshift(post);\n      }\n      return {\n        posts: updatedPosts,\n        totalPosts: prevState.totalPosts + 1\n      };\n    });\n  };\n\n  loadPosts = direction => {\n    if (direction) {\n      this.setState({ postsLoading: true, posts: [] });\n    }\n    let page = this.state.postPage;\n    if (direction === 'next') {\n      page++;\n      this.setState({ postPage: page });\n    }\n    if (direction === 'previous') {\n      page--;\n      this.setState({ postPage: page });\n    }\n    fetch('http://localhost:8000/feed/posts?page=' + page ,{\n      headers: {\n        Authorization: 'Bearer ' + this.props.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200) {\n          throw new Error('Failed to fetch posts.');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        this.setState({\n          posts: resData.posts.map(post => {\n            return {\n                ...post, imagePath: post.imageUrl\n            }\n          }),\n          totalPosts: resData.totalItems,\n          postsLoading: false\n        });\n      })\n      .catch(this.catchError);\n  };\n\n  statusUpdateHandler = event => {\n    event.preventDefault();\n    fetch('URL')\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Can't update status!\");\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData);\n      })\n      .catch(this.catchError);\n  };\n\n  newPostHandler = () => {\n    this.setState({ isEditing: true });\n  };\n\n  startEditPostHandler = postId => {\n    this.setState(prevState => {\n      const loadedPost = { ...prevState.posts.find(p => p._id === postId) };\n\n      return {\n        isEditing: true,\n        editPost: loadedPost\n      };\n    });\n  };\n\n  cancelEditHandler = () => {\n    this.setState({ isEditing: false, editPost: null });\n  };\n\n  finishEditHandler = postData => {\n    this.setState({\n      editLoading: true\n    });\n    // Set up data (with image!)\n    const formData = new FormData();\n    formData.append('title', postData.title);\n    formData.append('content', postData.content);\n    formData.append('image', postData.image);\n    let url = 'http://localhost:8000/feed/post';\n    let method = 'POST';\n    if (this.state.editPost) {\n      url = 'http://localhost:8000/feed/post/' + this.state.editPost._id;\n      method = 'PUT';\n    }\n\n    fetch(url,{\n      method: method,\n      body: formData,\n      headers: {\n        Authorization: 'Bearer ' + this.props.token\n      }      \n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Creating or editing a post failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const post = {\n          _id: resData.post._id,\n          title: resData.post.title,\n          content: resData.post.content,\n          creator: resData.post.creator,\n          createdAt: resData.post.createdAt\n        };\n        this.setState(prevState => {\n          let updatedPosts = [...prevState.posts];\n          if (prevState.editPost) {\n            const postIndex = prevState.posts.findIndex(\n              p => p._id === prevState.editPost._id\n            );\n            updatedPosts[postIndex] = post;\n          } else if (prevState.posts.length < 2) {\n            updatedPosts = prevState.posts.concat(post);\n          }\n          return {\n            posts: updatedPosts,\n            isEditing: false,\n            editPost: null,\n            editLoading: false\n          };\n        });\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({\n          isEditing: false,\n          editPost: null,\n          editLoading: false,\n          error: err\n        });\n      });\n  };\n\n  statusInputChangeHandler = (input, value) => {\n    this.setState({ status: value });\n  };\n\n  deletePostHandler = postId => {\n    this.setState({ postsLoading: true });\n    fetch('http://localhost:8000/feed/post/' + postId ,{\n      method: 'DELETE',\n      headers: {\n        Authorization: 'Bearer ' + this.props.token\n      }      \n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Deleting a post failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData);\n        this.setState(prevState => {\n          const updatedPosts = prevState.posts.filter(p => p._id !== postId);\n          return { posts: updatedPosts, postsLoading: false };\n        });\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ postsLoading: false });\n      });\n  };\n\n  errorHandler = () => {\n    this.setState({ error: null });\n  };\n\n  catchError = error => {\n    this.setState({ error: error });\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <ErrorHandler error={this.state.error} onHandle={this.errorHandler} />\n        <FeedEdit\n          editing={this.state.isEditing}\n          selectedPost={this.state.editPost}\n          loading={this.state.editLoading}\n          onCancelEdit={this.cancelEditHandler}\n          onFinishEdit={this.finishEditHandler}\n        />\n        <section className=\"feed__status\">\n          <form onSubmit={this.statusUpdateHandler}>\n            <Input\n              type=\"text\"\n              placeholder=\"Your status\"\n              control=\"input\"\n              onChange={this.statusInputChangeHandler}\n              value={this.state.status}\n            />\n            <Button mode=\"flat\" type=\"submit\">\n              Update\n            </Button>\n          </form>\n        </section>\n        <section className=\"feed__control\">\n          <Button mode=\"raised\" design=\"accent\" onClick={this.newPostHandler}>\n            New Post\n          </Button>\n        </section>\n        <section className=\"feed\">\n          {this.state.postsLoading && (\n            <div style={{ textAlign: 'center', marginTop: '2rem' }}>\n              <Loader />\n            </div>\n          )}\n          {this.state.posts.length <= 0 && !this.state.postsLoading ? (\n            <p style={{ textAlign: 'center' }}>No posts found.</p>\n          ) : null}\n          {!this.state.postsLoading && (\n            <Paginator\n              onPrevious={this.loadPosts.bind(this, 'previous')}\n              onNext={this.loadPosts.bind(this, 'next')}\n              lastPage={Math.ceil(this.state.totalPosts / 2)}\n              currentPage={this.state.postPage}\n            >\n              {this.state.posts.map(post => (\n                <Post\n                  key={post._id}\n                  id={post._id}\n                  author={post.creator.name}\n                  date={new Date(post.createdAt).toLocaleDateString('en-US')}\n                  title={post.title}\n                  image={post.imageUrl}\n                  content={post.content}\n                  onStartEdit={this.startEditPostHandler.bind(this, post._id)}\n                  onDelete={this.deletePostHandler.bind(this, post._id)}\n                />\n              ))}\n            </Paginator>\n          )}\n        </section>\n      </Fragment>\n    );\n  }\n}\n\nexport default Feed;\n"]},"metadata":{},"sourceType":"module"}