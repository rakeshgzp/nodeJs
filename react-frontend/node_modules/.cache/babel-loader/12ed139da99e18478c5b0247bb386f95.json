{"ast":null,"code":"import _classCallCheck from \"/home/rakesh/Rakesh/nodeJs/react-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/rakesh/Rakesh/nodeJs/react-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/rakesh/Rakesh/nodeJs/react-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/rakesh/Rakesh/nodeJs/react-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/rakesh/Rakesh/nodeJs/react-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/rakesh/Rakesh/nodeJs/react-frontend/src/pages/Feed/SinglePost/SinglePost.js\";\nimport React, { Component } from 'react';\nimport Image from '../../../components/Image/Image';\nimport './SinglePost.css';\nimport post from '../../../components/Feed/Post/Post';\n\nvar SinglePost = /*#__PURE__*/function (_Component) {\n  _inherits(SinglePost, _Component);\n\n  function SinglePost() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SinglePost);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SinglePost)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      title: '',\n      author: '',\n      date: '',\n      image: '',\n      content: ''\n    };\n    return _this;\n  }\n\n  _createClass(SinglePost, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var postId = this.props.match.params.postId;\n      var graphqlQuery = {\n        query: \"\\n        post(id: \\\"\".concat(postId, \"\\\") {\\n          title\\n          content\\n          imageUrl\\n          creator {\\n            name\\n          }\\n          createdAt\\n        }\\n      \")\n      };\n      fetch('http://localhost:8000/graphql', {\n        method: 'POST',\n        headers: {\n          Authorization: 'Bearer ' + this.props.token,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(graphqlQuery)\n      }).then(function (res) {\n        return res.json();\n      }).then(function (resData) {\n        if (resData.errors) {\n          throw new Error('User login failed!');\n        }\n\n        _this2.setState({\n          title: resData.data.post.title,\n          author: resData.data.post.creator.name,\n          image: 'http://localhost:8000/' + resData.data.post.imageUrl,\n          date: new Date(resData.data.post.createdAt).toLocaleDateString('en-US'),\n          content: resData.data.post.content\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"section\", {\n        className: \"single-post\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }, this.state.title), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }, \"Created by \", this.state.author, \" on \", this.state.date), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"single-post__image\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Image, {\n        contain: true,\n        imageUrl: this.state.image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }\n      }, this.state.content));\n    }\n  }]);\n\n  return SinglePost;\n}(Component);\n\nexport default SinglePost;","map":{"version":3,"sources":["/home/rakesh/Rakesh/nodeJs/react-frontend/src/pages/Feed/SinglePost/SinglePost.js"],"names":["React","Component","Image","post","SinglePost","state","title","author","date","image","content","postId","props","match","params","graphqlQuery","query","fetch","method","headers","Authorization","token","body","JSON","stringify","then","res","json","resData","errors","Error","setState","data","creator","name","imageUrl","Date","createdAt","toLocaleDateString","catch","err","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAO,kBAAP;AACA,OAAOC,IAAP,MAAiB,oCAAjB;;IAEMC,U;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,IAAI,EAAE,EAHA;AAINC,MAAAA,KAAK,EAAE,EAJD;AAKNC,MAAAA,OAAO,EAAE;AALH,K;;;;;;wCAQY;AAAA;;AAClB,UAAMC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAAvC;AACA,UAAMI,YAAY,GAAG;AACnBC,QAAAA,KAAK,iCACSL,MADT;AADc,OAArB;AAaAM,MAAAA,KAAK,CAAC,+BAAD,EACL;AACEC,QAAAA,MAAM,EAAE,MADV;AAEEC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAE,YAAY,KAAKR,KAAL,CAAWS,KAD/B;AAEP,0BAAgB;AAFT,SAFX;AAMEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,YAAf;AANR,OADK,CAAL,CASGU,IATH,CASQ,UAAAC,GAAG,EAAI;AACX,eAAOA,GAAG,CAACC,IAAJ,EAAP;AACD,OAXH,EAYGF,IAZH,CAYQ,UAAAG,OAAO,EAAI;AACf,YAAIA,OAAO,CAACC,MAAZ,EAAoB;AAClB,gBAAM,IAAIC,KAAJ,CAAU,oBAAV,CAAN;AACD;;AACD,QAAA,MAAI,CAACC,QAAL,CAAc;AACZzB,UAAAA,KAAK,EAAEsB,OAAO,CAACI,IAAR,CAAa7B,IAAb,CAAkBG,KADb;AAEZC,UAAAA,MAAM,EAAEqB,OAAO,CAACI,IAAR,CAAa7B,IAAb,CAAkB8B,OAAlB,CAA0BC,IAFtB;AAGZzB,UAAAA,KAAK,EAAE,2BAA2BmB,OAAO,CAACI,IAAR,CAAa7B,IAAb,CAAkBgC,QAHxC;AAIZ3B,UAAAA,IAAI,EAAE,IAAI4B,IAAJ,CAASR,OAAO,CAACI,IAAR,CAAa7B,IAAb,CAAkBkC,SAA3B,EAAsCC,kBAAtC,CAAyD,OAAzD,CAJM;AAKZ5B,UAAAA,OAAO,EAAEkB,OAAO,CAACI,IAAR,CAAa7B,IAAb,CAAkBO;AALf,SAAd;AAOD,OAvBH,EAwBG6B,KAxBH,CAwBS,UAAAC,GAAG,EAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,OA1BH;AA2BD;;;6BAEQ;AACP,0BACE;AAAS,QAAA,SAAS,EAAC,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKnC,KAAL,CAAWC,KAAhB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACc,KAAKD,KAAL,CAAWE,MADzB,UACqC,KAAKF,KAAL,CAAWG,IADhD,CAFF,eAKE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAO,QAAA,OAAO,MAAd;AAAe,QAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWI,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CALF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKJ,KAAL,CAAWK,OAAf,CARF,CADF;AAYD;;;;EAlEsBT,S;;AAqEzB,eAAeG,UAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport Image from '../../../components/Image/Image';\nimport './SinglePost.css';\nimport post from '../../../components/Feed/Post/Post';\n\nclass SinglePost extends Component {\n  state = {\n    title: '',\n    author: '',\n    date: '',\n    image: '',\n    content: ''\n  };\n\n  componentDidMount() {\n    const postId = this.props.match.params.postId;\n    const graphqlQuery = {\n      query: `\n        post(id: \"${postId}\") {\n          title\n          content\n          imageUrl\n          creator {\n            name\n          }\n          createdAt\n        }\n      `\n    }\n    fetch('http://localhost:8000/graphql' ,\n    {\n      method: 'POST',\n      headers: {\n        Authorization: 'Bearer ' + this.props.token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(graphqlQuery)      \n    })\n      .then(res => {\n        return res.json();\n      })\n      .then(resData => {\n        if (resData.errors) {\n          throw new Error('User login failed!');\n        }\n        this.setState({\n          title: resData.data.post.title,\n          author: resData.data.post.creator.name,\n          image: 'http://localhost:8000/' + resData.data.post.imageUrl,\n          date: new Date(resData.data.post.createdAt).toLocaleDateString('en-US'),\n          content: resData.data.post.content\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  render() {\n    return (\n      <section className=\"single-post\">\n        <h1>{this.state.title}</h1>\n        <h2>\n          Created by {this.state.author} on {this.state.date}\n        </h2>\n        <div className=\"single-post__image\">\n          <Image contain imageUrl={this.state.image} />\n        </div>\n        <p>{this.state.content}</p>\n      </section>\n    );\n  }\n}\n\nexport default SinglePost;\n"]},"metadata":{},"sourceType":"module"}